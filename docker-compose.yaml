version: "3.9"

volumes:
  caddy-data:
    name: caddy-data
  caddy-config:
    name: caddy-config
  database:
    name: database
  feed-generator:
    name: feed-generator
  redis:
    name: redis

networks:
 default:
    name: bsky_repsky.unify.mx
    external: true
 
services:
  caddy:
    image: caddy:2
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
      - 9000:9000
    environment:
      - GOINSECURE=repsky.unify.mx,*.repsky.unify.mx
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - DOMAIN=repsky.unify.mx
      - EMAIL4CERTS=thanhbpc.dev@gmail.com
      - BSKY_ADMIN_PASSWORDS=ADMINPASSWORD
    volumes:
      - ./config/caddy/Caddyfile:/etc/caddy/Caddyfile
      # CA certificates for self-signed. >>>
      - ./certs/root.crt:/data/caddy/pki/authorities/local/root.crt:ro
      - ./certs/root.key:/data/caddy/pki/authorities/local/root.key:ro
      # CA certificates for self-signed. <<<
      - caddy-data:/data
      - caddy-config:/config
    healthcheck:
      # https://caddy.community/t/what-is-the-best-practise-for-doing-a-health-check-for-caddy-containers/12995
      test: "wget --no-verbose --tries=1 --spider http://localhost:2019/metrics || exit 1"
      interval: 5s
      retries: 20

# to generate HTTPS certifications on-demand >>>>>
  caddy-sidecar:
    image: httpd:2
    environment:
      - GOINSECURE=repsky.unify.mx,*.repsky.unify.mx
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    volumes:
       - ./certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
# to generate HTTPS certifications on-demand <<<<<

# debug for caddy>>> 
  test-wss:
    image: itaru2622/fastapi:bookworm
    environment:
      - app=main:app
      - opts=--host 0.0.0.0 --port 8080
    working_dir: /opt/fastapi-samples/3catchall

  test-ws:
    image: itaru2622/fastapi:bookworm
    environment:
      - app=main:app
      - opts=--host 0.0.0.0 --port 8080
    working_dir: /opt/fastapi-samples/3catchall

# debug for caddy <<<

  database:
    image: postgres:16-bookworm
    ports:
      - 5432:5432
    environment:
      - GOINSECURE=repsky.unify.mx,*.repsky.unify.mx
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=healthcheck
    volumes:
      - ./config/init-postgres:/docker-entrypoint-initdb.d/
      - database:/var/lib/postgresql/data/
    restart: always

  redis:
    image: redis:7-bookworm
    volumes:
      - redis:/data/
    restart: always

  feed-generator:
    image: bluesky-feed-generator:latest
    profiles: ['', 'feed-generator']
    build:
      context: .
      dockerfile: Dockerfile
      args:
       - http_proxy=${http_proxy}
       - https_proxy=${https_proxy}
       - no_proxy=${no_proxy}
       - JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
    ports:
      - 2586:3000
    environment:
      - FEEDGEN_HOSTNAME=feed-generator.repsky.unify.mx
      - FEEDGEN_LISTENHOST=0.0.0.0
      - FEEDGEN_PORT=3000
      - FEEDGEN_PUBLISHER_DID=did:plc:62sygyqvpetbfz57ebmwvql4
      - FEEDGEN_SERVICE_DID=did:web:feed-generator.repsky.unify.mx
      - FEEDGEN_SQLITE_LOCATION=/data/db.sqlite
      - FEEDGEN_PLC_URL=https://plc.repsky.unify.mx
      - FEEDGEN_SUBSCRIPTION_ENDPOINT=wss://bsky.network
      - FEEDGEN_SUBSCRIPTION_RECONNECT_DELAY=3000
      - GOINSECURE=repsky.unify.mx,*.repsky.unify.mx
      - NODE_ENV=production
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    restart: always
    volumes:
      # supporting self-signed certificates, easiest way >>>>
      - ./certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
      # supporting self-signed certificates, easiest way <<<<
      - feed-generator:/data/
#     - ${rDir}/feed-generator:/app
